[
    ~[tlist_sql;
        with currentTerm as (select
            s.id,
            cc.course_number,
            co.course_name,
            t.lastfirst,
            pfg.comment_value
        from students s
        join cc 
            on cc.studentid = s.id
            and cc.schoolid = s.schoolid
        join courses co 
            on cc.course_number = co.course_number
        join sections sec 
            on sec.id = cc.sectionid
        join teachers t
            on t.id = sec.teacher
        join pgfinalgrades pfg
            on pfg.sectionid = sec.id
            and pfg.studentid = s.id
        where
            ~[if.~(gpv.dothisfor)=selected] s.dcid in (select dcid from ~[temp.table.current.selection:students])[/if]
            ~[if.~(gpv.dothisfor)=enrolled] s.Enroll_Status = 0[/if]
            ~[if.~(gpv.dothisfor;num)>0] s.id = ~(gpv.dothisfor)[/if]
            ~[if.is.a.school] and cc.schoolid = ~(curschoolid) [/if.is.a.school]
            and pfg.finalgradename = '~(gpv.storecode)'
            and cc.termid = ~(gpv.yearid),
        termGrades as (select
            s.id,
            pfg.course_number,
            pfg.finalgradename
            pfg.grade
        from students s
        join pgfinalgrades pfg
            on pfg.studentid = s.id
        where 
            ~[if.~(gpv.dothisfor)=selected] s.dcid in (select dcid from ~[temp.table.current.selection:students])[/if]
            ~[if.~(gpv.dothisfor)=enrolled] s.Enroll_Status = 0[/if]
            ~[if.~(gpv.dothisfor;num)>0] s.id = ~(gpv.dothisfor)[/if]
            ~[if.is.a.school] and sg.schoolid = ~(curschoolid) [/if.is.a.school]
            and pfg.termid = ~(curtermid)),
        gradesPivot as (select *
            from termGrades
            PIVOT (
            MAX ( grade )
            FOR storecode
            IN ( 'R1' R1, 'R2' R2, 'R3' R3))
            order by id, course_number)
            
        select
            ct.id,
            ct.course_number,
            ct.course_name,
            ct.teacher_name,
            ct.comment_value,
            gp.r1,
            gp.r2,
            gp.r3,
            case 
                when substr(ct.course_number,2,3) = 'LAN' then rpt.e_ela_adaptation
                WHEN substr(ct.course_number,2,4) = 'FREF' then rpt.e_fla_adaptation
                WHEN substr(ct.course_number,2,4) = 'FREG' then rpt.e_fla_adaptation
                WHEN substr(ct.course_number,2,4) = 'FREA' then rpt.e_fre_adaptation
                WHEN substr(ct.course_number,2,3) = 'MAT' then rpt.e_math_adaptation
                WHEN substr(ct.course_number,2,4) = 'MUSA' then rpt.e_mus_adaptation
                WHEN substr(ct.course_number,2,3) = 'PED' then rpt.e_ped_adaptation
                WHEN substr(ct.course_number,2,4) = 'PHEA' then rpt.e_ped_adaptation
                WHEN substr(ct.course_number,2,3) = 'SCI' then rpt.e_sci_adaptation
                WHEN substr(ct.course_number,2,3) = 'SOC' then rpt.e_soc_adaptation
            else
                0
            end as adaptation,
            case 
                WHEN substr(ct.course_number,2,3) = 'ART' then rpt.e_art_program             
                WHEN substr(ct.course_number,2,3) = 'LAN' then rpt.e_ela_program          
                WHEN substr(ct.course_number,2,4) = 'FREF' then rpt.e_fla_program
                WHEN substr(ct.course_number,2,4) = 'FREG' then rpt.e_fla_program
                WHEN substr(ct.course_number,2,4) = 'FREA' then rpt.e_fre_program
                WHEN substr(ct.course_number,2,3) = 'MAT' then rpt.e_math_program
                WHEN substr(ct.course_number,2,4) = 'MUSA' then rpt.e_mus_program
                WHEN substr(ct.course_number,2,3) = 'PED' then rpt.e_ped_program
                WHEN substr(ct.course_number,2,4) = 'PHEA' then rpt.e_ped_program
                WHEN substr(ct.course_number,2,3) = 'SCI' then rpt.e_sci_program
                WHEN substr(ct.course_number,2,3) = 'SOC' then rpt.e_soc_program
               WHEN substr(ct.course_numbet,2,3) = 'CIT' then rpt.e_cit_program
               WHEN substr(ct.course_number,2,3) = 'INT' then rpt.e_int_program
               WHEN substr(ct.coruse_number,2,3) = 'HEA' then rpt.e_hea_program
            else
                'Regular'
            end as program,
            case
                WHEN substr(ct.course_number,2,3) = 'LAN' then rpt.e_ela_iep
                WHEN substr(ct.course_number,2,4) = 'FREF' then rpt.e_fla_iep
                WHEN substr(ct.course_number,2,4) = 'FREG' then rpt.e_fla_iep
                WHEN substr(ct.course_number,2,3) = 'MAT' then rpt.e_math_iep
            else
                0
            end as iep,
            case
                WHEN substr(ct.course_number,2,3) = 'LAN' then rpt.e_ela_eal
                WHEN substr(ct.course_number,2,4) = 'FREF' then rpt.e_fla_eal
                WHEN substr(ct.course_number,2,4) = 'FREG' then rpt.e_fla_eal
                WHEN substr(ct.course_number,2,3) = 'MAT' then rpt.e_mat_eal
            else
                0
            end as eal
        from currentTerm ct
        join gradesPivot gp
            on ct.id=gp.id and ct.course_number = gp.course_number
        join students s 
            on ct.id = s.id
        left join u_def_ext_students0 rpt
            on rpt.studentsdcid=s.dcid
        order by id
    ]
    {
        "id": "~(id)",
        "course_number": "~(course_number;json)",
        "course_name": "~(cname;json)",
        "teacher": "~(teacher)",
        "comment": "~(comment;json)",
        "r1grade": "~(i1;json)",
        "r2grade": "~(i2;json)",
        "r3grade": "~(i3;json)",
        "adaptation": "~(adaptation;json)",
        "program": "~(program;json)",
        "iep": "~(iep;json)",
        "eal": "~(eal;json)"=
    },     
    [/tlist_sql]
    {}




]
]
