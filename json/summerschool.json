[
   ~[x:GetDoThisForStudents]
   ~[x:SortSelection;Students:~[displayprefschool:report_card_sort]]
   ~[RepeatForEach:Students]
   {
   ~[tlist_sql;
      select
         name,
         principal
      from schools
      where school_number = 302]
      "school": "~(name;json)",
      "principal": "~(principal;html)",
   [/tlist_sql]
   ~[tlist_sql;
      select
         s.id sid,
         s.student_number,
         case
            when u.pei_uselegal = 1 then (scf.pscore_legal_first_name || ' ' || scf.pscore_legal_last_name) 
            else (s.first_name || ' ' || s.last_name) 
            end
         as student_name,
         to_char(s.dob, 'mm/dd/yyyy') dob,
         s.grade_level
      from students s
      join schools sch
         on sch.school_number = s.schoolid
      left join u_def_ext_students u
         on u.studentsdcid = s.dcid
      left join studentcorefields scf 
         on scf.studentsdcid = s.dcid
      where s.id = ~(curstudid)
      order by sid;]
         "sid":            "~(sid)",
         "student_number": "~(student_number)",
         "student_name":   "~(student_name;json)",
         "dob":            "~(dob)",
         "grade_level":    "~(grade_level)",
      [/tlist_sql]
         "courses": [
      ~[tlist_sql;
         select
            cc.sectionid,
            sg.course_name,
            sg.course_number,
            case substr(sg.course_number,5,1)
               when '0' then 'Open'
               when '1' then 'Advanced'
               when '2' then 'Academic'
               when '3' then 'General'
               when '4' then 'Vocational'
               when '5' then 'Vocational'
               when '6' then 'Modified'
               when '7' then 'Intervention' 
               when 'H' then 'IB'
               when 'S' then 'IB' 
            end as course_level,
            sg.absences,
            sg.tardies,
            sg.comment_value,
            sg.grade,
            sg.storecode,
            sg.teacher_name
         from students s
         join cc 
            on cc.studentid = s.id
         join storedgrades sg
            on sg.studentid = cc.studentid 
            and sg.sectionid = cc.sectionid
         join courses c
            on c.course_number = cc.course_number
         where 
            s.id = ~(curstudid)
            and sg.schoolid = 302
            and sg.termid = ~(curyearid)00
            and sg.storecode = 'S0'
            and nvl(c.sched_do_not_print,0) = 0
            and nvl(sg.excludefromtranscripts,0) = 0
         order by 1;]
         {
            "sectionid":"~(sectionid)",
            "course_name":"~(course_name;json)",
            "course_number":"~(course_number;json)",
            "level":"~(course_level)",
            "abs":"~(absences)",
            "lates":"~(tardies)",
            "comment":"~(comment_value;json)",
            "grade":"~(grade;json)",
            "storecode":"~(storecode;json)",
            "teachers":"~(teacher_names;json)"
         },
         [/tlist_sql]
         {}],
         "transcript": [
            ~[tlist_sql;
            select
                  to_char(t.lastday,'yyyy/mm') date_earned,
                  sg.course_number,
                  sg.course_name,
                  sg.grade,
                  round(nvl(sg.earnedcrhrs,0),2) earnedcrhrs,
                  sg.potentialcrhrs,
                  nvl(sg.credit_type,'ZZ') credit_type
               from students s
               join storedgrades sg
                  on sg.studentid = s.id
               join terms t
                  on t.id = sg.termid
                  and t.schoolid = sg.schoolid
               join courses c
                  on sg.course_number = c.course_number
               where
                  s.id = ~(curstudid)
                  and sg.storecode = 'F1'
                  and nvl(c.sched_do_not_print,0) = 0
                  and nvl(sg.excludefromtranscripts,0) = 0                 
               order by sg.credit_type ASC, date_earned ASC;
            ]
            {
                  "lastday":"~(1)",
                  "courseNumber":"~(2)",
                  "courseName":"~(3;json)",
                  "grade":"~(4)",
                  "credits":"~(5)",
                  "maxCredits":"~(6)",
                  "creditType":"~(7)"
            },
            [/tlist_sql]
            {}   
         ],
         ~[tlist_sql;
           select
              sum(sg.earnedcrhrs) credithours
           from students s
           join storedgrades sg
              on sg.studentid = s.id
           join courses c
              on sg.course_number = c.course_number
           where
              s.id = ~(curstudid)
              and sg.storecode = 'F1'
              and nvl(c.sched_do_not_print,0) = 0
              and nvl(sg.excludefromtranscripts,0) = 0 
            order by 1;]
            "creditHours": "~(1)"
            [/tlist_sql]
   }
   [between:Students],
   [/RepeatForEach:Students] 
]